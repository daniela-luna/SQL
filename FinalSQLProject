# The following queries showcase the skills I've developed throughout my data analytics certificate course. 
# They highlight my proficiency in leveraging SQL functions to address complex questions and conduct data analysis. 
# These examples reflect both my ability to solve predefined questions and my initiative in formulating new queries to uncover insights within the data.

-- 1. Show Customers (full names, customer ID, and country) who are not in the US. 
SELECT FirstName
,LastName
,CustomerId
,Country
FROM chinook.Customers
WHERE Country <> 'USA';

-- 2. Show only the Customers in Brazil.
SELECT *
FROM chinook.Customers
WHERE Country = 'Brazil';

-- 3. Find the Invoices of customers who are from Brazil. Include full name, invoice ID, date of invoice, and billing country. 
SELECT c.FirstName
,c.LastName
,invoices.InvoiceId
,invoices.InvoiceDate
,invoices.BillingCountry
FROM invoices
LEFT JOIN customers AS c 
ON invoices.CustomerId = c.CustomerId
WHERE invoices.BillingCountry = 'Brazil';

-- 4. SHow the Employees who are Sales Agents. 
SELECT * FROM chinook.employees
WHERE Title = 'Sales Support Agent'; 

-- 5. FInd a unique/distinct list of billing countries from the invoice table. 
SELECT DISTINCT BillingCountry FROM chinook.invoices;

-- 6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sale Agent's full name. 
SELECT 
emp.FirstName
,emp.LastName
,inv.InvoiceID
FROM chinook.employees AS emp
INNER JOIN chinook.customers AS cust 
ON cust.SupportRepId = emp.EmployeeId
INNER JOIN chinook.invoices AS inv
ON inv.CustomerId = cust.CustomerId;

-- 7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers. 
SELECT 
emp.FirstName
,emp.LastName
,cust.FirstName
,cust.LastName
,cust.Country
,inv.Total
FROM chinook.employees emp 
JOIN chinook.Customers cust ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv ON Inv.CustomerId = cust.CustomerId;

-- 8. How many invoices where there in 2009? 
SELECT COUNT(*)
FROM chinook.invoices
WHERE InvoiceDate like '2009%';


-- 9. What are the total sales for 2009? 
SELECT SUM(Total)
FROM chinook.invoices
WHERE invoiceDate like  '2009%';

-- 10. Write a query that includes the purchased track name with each invoice line ID.
SELECT items.InvoiceLineId
,tracks.Name
FROM chinook.invoice_items AS items
JOIN chinook.tracks AS tracks
ON items.TrackId = tracks.TrackId; 

-- 11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT items.InvoiceLineId
,tracks.Name AS Track
,artists.Name AS Artist
FROM chinook.invoice_items AS items
LEFT JOIN chinook.tracks AS tracks
ON items.TrackId = tracks.TrackId
JOIN chinook.albums AS albums
ON tracks.AlbumId = albums.AlbumId
LEFT JOIN chinook.artists AS artists
ON artists.ArtistId = albums.ArtistId;

-- 12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT tracks.Name AS Track
,albums.Title AS Album
,media.Name AS Media
,genres.Name AS Genre
FROM chinook.tracks AS tracks
LEFT JOIN chinook.albums AS albums 
ON tracks.AlbumId = albums.AlbumId
JOIN chinook.media_types AS media 
ON media.MediaTypeId = tracks.MediaTypeId
JOIN chinook.genres AS genres
ON genres.GenreId = tracks.GenreId; 


-- 13. Show the total sales made by each sales agent.
SELECT emp.FirstName
,emp.LastName
,ROUND(SUM(inv.Total), 2) AS Sales_Total
FROM chinook.invoices AS inv
JOIN chinook.customers AS cust
ON inv.CustomerId = cust.CustomerId
JOIN chinook.employees AS emp 
ON cust.SupportRepId = emp.EmployeeId
WHERE emp.Title = 'Sales Support Agent'
GROUP BY emp.FirstName; 


-- 14. Which sales agent made the most dollars in sales in 2009?
SELECT emp.FirstName
,emp.LastName
,ROUND(SUM(inv.Total), 2) AS Sales_Total
FROM chinook.invoices AS inv
JOIN chinook.customers AS cust
ON inv.CustomerId = cust.CustomerId
JOIN chinook.employees AS emp 
ON cust.SupportRepId = emp.EmployeeId
WHERE emp.Title = 'Sales Support Agent' 
AND inv.InvoiceDate like '2009%'
GROUP BY emp.FirstName
ORDER BY ROUND(SUM(inv.Total), 2) DESC LIMIT 1; 


-- 15. Order the tracks by AlbumId. 
SELECT * FROM chinook.tracks AS tracks
ORDER BY tracks.AlbumId; 

-- 16. List the top 5 customers based on total money spent. 
SELECT cust.FirstName
,cust.LastName
,ROUND(SUM(inv.Total), 2) AS 'Money Spent'
FROM chinook.customers AS cust
JOIN chinook.invoices AS inv
ON cust.CustomerID = inv.CustomerId
GROUP BY cust.CustomerId
ORDER BY ROUND(SUM(inv.Total), 2) DESC LIMIT 5;

-- 17. Which zipcode spends the most money? 
SELECT ROUND(SUM(inv.Total), 2) AS 'Sales'
,inv.BillingPostalCode
FROM chinook.invoices AS inv
WHERE inv.BillingPostalCode IS NOT NULL
GROUP BY inv.BillingPostalCode
ORDER BY ROUND(SUM(inv.Total), 2) DESC LIMIT 1;

